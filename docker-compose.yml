version: '3'
services:
  # Next.js Frontend
  nextjs:
    build:
      context: ./client
    depends_on:
      - expressjs
    networks:
      - my-network

  # Nginx
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - nextjs
    networks:
      - my-network

  # Express.js Backend
  expressjs:
    build:
      context: ./server 
    environment:
      - NODE_ENV=production
    depends_on:
      - hasura
      - postgres
    networks:
      - my-network

    # PostgreSQL Database
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: database
    volumes:
      - ./data/postgres:/var/lib/postgresql/data 
    networks:
      - my-network

  # Hasura GraphQL Engine
  hasura:
    image: hasura/graphql-engine:v2.36.2
    ports:
      - "8081:8080"
    environment:
      HASURA_GRAPHQL_DATABASE_URL: ${HASURA_GRAPHQL_DATABASE_URL}
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
      HASURA_GRAPHQL_ENABLE_CONSOLE: true
    depends_on:
      - postgres
    networks:
      - my-network

networks:
  my-network: